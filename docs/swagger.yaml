definitions:
  auth.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  auth.LoginResponse:
    properties:
      base_response:
        $ref: '#/definitions/models.BaseResponse'
      token:
        type: string
    type: object
  models.BaseResponse:
    properties:
      error_msg:
        type: string
      error_stack:
        items:
          type: string
        type: array
      error_type:
        type: string
      success:
        type: boolean
    type: object
  models.CreateShiftRequest:
    properties:
      shift_length_in_hours:
        type: number
      user_email:
        type: string
      work_date:
        type: string
    type: object
  models.CreateShiftResponse:
    properties:
      base_response:
        $ref: '#/definitions/models.BaseResponse'
      schedule:
        $ref: '#/definitions/models.Shift'
    type: object
  models.CreateUserRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
    type: object
  models.CreateUserResponse:
    properties:
      base_response:
        $ref: '#/definitions/models.BaseResponse'
      user:
        $ref: '#/definitions/models.User'
    type: object
  models.DeleteShiftRequest:
    properties:
      shift_uid:
        type: string
    type: object
  models.DeleteShiftResponse:
    properties:
      base_response:
        $ref: '#/definitions/models.BaseResponse'
      shift:
        $ref: '#/definitions/models.Shift'
    type: object
  models.DeleteUserRequest:
    properties:
      email:
        type: string
    type: object
  models.DeleteUserResponse:
    properties:
      base_response:
        $ref: '#/definitions/models.BaseResponse'
      user:
        $ref: '#/definitions/models.User'
    type: object
  models.Shift:
    properties:
      created:
        type: string
      deleted:
        type: string
      id:
        type: integer
      shift_length_in_hours:
        type: number
      uid:
        type: string
      updated:
        type: string
      user_id:
        type: integer
      work_date:
        type: string
    type: object
  models.UpdateShiftRequest:
    properties:
      assigned_user_email:
        type: string
      shift_length_in_hours:
        type: number
      shift_uid:
        type: string
      work_date:
        type: string
    type: object
  models.UpdateShiftResponse:
    properties:
      base_response:
        $ref: '#/definitions/models.BaseResponse'
      shift:
        $ref: '#/definitions/models.Shift'
    type: object
  models.UpdateUserPermissionLevelRequest:
    properties:
      email:
        type: string
      permission_level:
        type: string
    type: object
  models.UpdateUserPermissionLevelResponse:
    properties:
      base_response:
        $ref: '#/definitions/models.BaseResponse'
      user:
        $ref: '#/definitions/models.User'
    type: object
  models.User:
    properties:
      created:
        type: string
      deleted:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      password:
        type: string
      type:
        type: string
      uid:
        type: string
      updated:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/login:
    post:
      operationId: login
      parameters:
      - description: login request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/auth.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.LoginResponse'
      summary: Login
  /api/v1/shift:
    delete:
      operationId: delete-shift
      parameters:
      - description: delete shift request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/models.DeleteShiftRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DeleteShiftResponse'
      summary: Delete shift
    patch:
      operationId: update-shift
      parameters:
      - description: update shift request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/models.UpdateShiftRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UpdateShiftResponse'
      summary: Update shift
    post:
      operationId: create-new-shift
      parameters:
      - description: create shift request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/models.CreateShiftRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CreateShiftResponse'
      summary: Create new shift
  /api/v1/signup:
    post:
      operationId: create-a-new-user
      parameters:
      - description: create user request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/models.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CreateUserResponse'
      summary: Create a new user
  /api/v1/user:
    delete:
      operationId: delete-user
      parameters:
      - description: delete user request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/models.DeleteUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DeleteUserResponse'
      summary: Delete user
  /api/v1/user/permission:
    put:
      operationId: update-user-permission-level
      parameters:
      - description: update user permission request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUserPermissionLevelRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UpdateUserPermissionLevelResponse'
      summary: Update user permission level
swagger: "2.0"
